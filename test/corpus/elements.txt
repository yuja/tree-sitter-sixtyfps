================================================================================
Sub elements
================================================================================

Type0 := Base {
    Bar {}
    foo := Bar {}
}

--------------------------------------------------------------------------------

(document
  (component
    id: (identifier)
    root_element: (element
      base_type: (qualified_type_name
        (identifier))
      (element_content
        (sub_element
          (element
            base_type: (qualified_type_name
              (identifier))
            (element_content)))
        (sub_element
          id: (identifier)
          (element
            base_type: (qualified_type_name
              (identifier))
            (element_content)))))))

================================================================================
Property declarations
================================================================================

Type0 := Base {
    property<int> no_value;
    property<string> with_value: "hello";
    property<int> two_way_value <=> bar;
    property two_way_alias <=> baz;
}

--------------------------------------------------------------------------------

(document
  (component
    id: (identifier)
    root_element: (element
      base_type: (qualified_type_name
        (identifier))
      (element_content
        (property_declaration
          type: (qualified_type_name
            (identifier))
          name: (identifier))
        (property_declaration
          type: (qualified_type_name
            (identifier))
          binding: (binding
            name: (identifier)
            expr: (binding_expression
              (string_literal
                (string_fragment)))))
        (property_declaration
          type: (qualified_type_name
            (identifier))
          binding: (two_way_binding
            name: (identifier)
            expr: (qualified_name
              (identifier))))
        (property_declaration
          binding: (two_way_binding
            name: (identifier)
            expr: (qualified_name
              (identifier))))))))

================================================================================
Property bindings
================================================================================

Type0 := Base {
    foo: {}
    bar: baz;
    two_way <=> bar.baz;
}

--------------------------------------------------------------------------------

(document
  (component
    id: (identifier)
    root_element: (element
      base_type: (qualified_type_name
        (identifier))
      (element_content
        (binding
          name: (identifier)
          expr: (binding_expression
            (code_block)))
        (binding
          name: (identifier)
          expr: (binding_expression
            (qualified_name
              (identifier))))
        (two_way_binding
          name: (identifier)
          expr: (qualified_name
            (identifier)
            (identifier)))))))

================================================================================
Callback declarations
================================================================================

Type0 := Base {
    callback no_arg;
    callback no_arg_paren();
    callback args(int, string);
    callback trailing_comma(int,);
    callback return_type() -> int;
    callback two_way_alias <=> foo.bar;
}

--------------------------------------------------------------------------------

(document
  (component
    id: (identifier)
    root_element: (element
      base_type: (qualified_type_name
        (identifier))
      (element_content
        (callback_declaration
          name: (identifier))
        (callback_declaration
          name: (identifier)
          parameters: (callback_declaration_parameters))
        (callback_declaration
          name: (identifier)
          parameters: (callback_declaration_parameters
            (qualified_type_name
              (identifier))
            (qualified_type_name
              (identifier))))
        (callback_declaration
          name: (identifier)
          parameters: (callback_declaration_parameters
            (qualified_type_name
              (identifier))))
        (callback_declaration
          name: (identifier)
          parameters: (callback_declaration_parameters)
          return_type: (qualified_type_name
            (identifier)))
        (callback_declaration
          binding: (two_way_binding
            name: (identifier)
            expr: (qualified_name
              (identifier)
              (identifier))))))))
