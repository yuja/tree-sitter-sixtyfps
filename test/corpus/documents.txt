================================================================================
Comments
================================================================================

// line comment

/*
 * block comment
 */

/* nested /* block */ comment */

/*/**/*/

/**/

/*/ */

Type0 := Base {
    div: 1 /*comment*// 2;
    str: "foo /* bar" + "*/ baz";
}

--------------------------------------------------------------------------------

(document
  (line_comment)
  (block_comment)
  (block_comment)
  (block_comment)
  (block_comment)
  (block_comment)
  (component
    (identifier)
    (element
      (qualified_type_name
        (identifier))
      (element_content
        (binding
          (identifier)
          (binding_expression
            (binary_expression
              (number_literal)
              (block_comment)
              (number_literal))))
        (binding
          (identifier)
          (binding_expression
            (binary_expression
              (string_literal
                (string_fragment))
              (string_literal
                (string_fragment)))))))))

================================================================================
Invalid comments
================================================================================

/*/

/*/*/*/

--------------------------------------------------------------------------------

(document
  (ERROR))

================================================================================
Exports
================================================================================

export { Type1 }
export { Type2, Type3 as Alias }
export Type4 := Base {}
export struct Foo := { foo: bar }

--------------------------------------------------------------------------------

(document
  (exports_list
    names: (import_export_identifier_list
      (import_export_identifier
        name: (identifier))))
  (exports_list
    names: (import_export_identifier_list
      (import_export_identifier
        name: (identifier))
      (import_export_identifier
        name: (identifier)
        alias: (identifier))))
  (exports_list
    (component
      id: (identifier)
      root_element: (element
        base_type: (qualified_type_name
          (identifier))
        (element_content))))
  (exports_list
    (struct_declaration
      name: (identifier)
      fields: (object_type
        (object_type_member
          name: (identifier)
          type: (qualified_type_name
            (identifier)))))))

================================================================================
Imports
================================================================================

import { Type1, Type2 as Alias } from "file";
import "another_file";

--------------------------------------------------------------------------------

(document
  (import_specifier
    names: (import_export_identifier_list
      (import_export_identifier
        name: (identifier))
      (import_export_identifier
        name: (identifier)
        alias: (identifier)))
    source: (string_literal
      (string_fragment)))
  (import_specifier
    source: (string_literal
      (string_fragment))))

================================================================================
Components
================================================================================

Type0 := Base {}
Type1 := Qualified.Base {}
global Struct := {}

--------------------------------------------------------------------------------

(document
  (component
    id: (identifier)
    root_element: (element
      base_type: (qualified_type_name
        (identifier))
      (element_content)))
  (component
    id: (identifier)
    root_element: (element
      base_type: (qualified_type_name
        (identifier)
        (identifier))
      (element_content)))
  (global_component
    id: (identifier)
    root_element: (element_content)))

================================================================================
Struct declarations
================================================================================

struct Foo := {
    foo: bar,
    baz: [int],
    qux: { quux: int },
}

struct Null := {}

--------------------------------------------------------------------------------

(document
  (struct_declaration
    name: (identifier)
    fields: (object_type
      (object_type_member
        name: (identifier)
        type: (qualified_type_name
          (identifier)))
      (object_type_member
        name: (identifier)
        type: (array_type
          (qualified_type_name
            (identifier))))
      (object_type_member
        name: (identifier)
        type: (object_type
          (object_type_member
            name: (identifier)
            type: (qualified_type_name
              (identifier)))))))
  (struct_declaration
    name: (identifier)
    fields: (object_type)))
